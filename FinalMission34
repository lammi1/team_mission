 미션 3 (난이도 : 상)


1. 미션 제목
    Infix to postfix (https://www.geeksforgeeks.org/stack-set-2-infix-to-postfix/)

 

 

2. 지시문

    스택을 사용한 기본 문제중 하나로, 중위 표기법을 후위 표기법으로 변환하는 프로그램을 만드는 것 입니다.
        - 중위 표기법: 2 + 2
        - 후위 표기법: 2 2 +
    왜 후위 표기법으로 변환하는게 필요한가?
        - 컴파일러는 오른쪽에서 왼쪽 혹은 왼쪽에서 오른쪽으로 표기법을 읽기 때문
        - 혹은 추가로 Use case 들을 찾아보아요~

 

알고리즘
    1. 중위 표기법을 왼쪽에서 오른쪽으로 읽는다.
    2. 문자가 피연산자 (operand) 라면 출력결과에 저장
    3. 연산자 (operator) 라면
        3.1. 연산자가 들어오면 자기보다 우선순위가 높거나 같은 것들을 Pop 하고 출력결과에 저장
               (Pop 도중에 괄호가 나타나면 pop 중지), 자신을 Stack 에 Push 하시오.
    4. 여는 괄호 (“(“) 를 만나면 무조건 Stack 에 Push 하시오.
    5. 닫는 괄호 (“)”) 를 만나면 여는 괄호 (“(“)를 만날 때까지 Stack 에서 Pop 하여 출력결과에 저장
    6. 2 ~ 5 번 과정을 반복
    7. 출력결과 출력
    8. Stack 이 Empty 가 될 때까지, Pop 하고 출력

 

* 6주차 미션에서 구현한 스택을 이용하면 편하겠네요.

 


3. 핵심 개념
    #infix #postfix #중위표기법 #후위표기법

 

 

4. 부가 설명
    - 중위표기법: https://en.wikipedia.org/wiki/Infix_notation
    - 후위표기법: https://en.wikipedia.org/wiki/Reverse_Polish_notation
    - Stack: https://en.wikipedia.org/wiki/Stack_(abstract_data_type)


 

 

 

 

✔︎ 미션 4 (난이도 : 상)


1. 미션 제목
중복 빼고 정렬하기

 

 

2. 지시문

    N개의 정수가 주어진다. 이때, N개의 정수를 오름차순으로 정렬하는 프로그램을 작성하시오. 같은 정수는 한번만 출력한다.


    조건 및 질문
       - 구현체를 위 문제은행에 제출하여 성공하시오
       - 본인의 구현체의 시간복잡도를 구하시요
       - 해당 문제에서 본인의 구현체보다 빠른 답이 있을까요?

 

 


3. 핵심 개념
    #정렬 #중복 #빅오표기법 #big O notation

 

 

4. 부가 설명
    - 여러 정렬 방법: https://www.geeksforgeeks.org/sorting-algorithms/
    - Big O notation: https://en.wikipedia.org/wiki/Big_O_notation
